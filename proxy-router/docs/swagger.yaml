basePath: /
definitions:
  aiengine.AgentTool:
    properties:
      description:
        type: string
      inputSchema:
        $ref: '#/definitions/aiengine.ToolInputSchema'
      name:
        type: string
    type: object
  aiengine.LocalAgent:
    properties:
      args:
        items:
          type: string
        type: array
      capacityPolicy:
        type: string
      command:
        type: string
      concurrentSlots:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
  aiengine.LocalModel:
    properties:
      apiType:
        type: string
      apiUrl:
        type: string
      capacityPolicy:
        type: string
      id:
        type: string
      model:
        type: string
      name:
        type: string
      slots:
        type: integer
    type: object
  aiengine.ToolInputSchema:
    properties:
      properties:
        additionalProperties: true
        type: object
      required:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  authapi.AddUserReq:
    properties:
      password:
        type: string
      perms:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - password
    - perms
    - username
    type: object
  authapi.AgentTxsRes:
    properties:
      nextCursor:
        items:
          type: integer
        type: array
      txHashes:
        items:
          type: string
        type: array
    type: object
  authapi.AgentUser:
    properties:
      allowances:
        additionalProperties:
          $ref: '#/definitions/lib.BigInt'
        type: object
      isConfirmed:
        type: boolean
      perms:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  authapi.AgentUsersRes:
    properties:
      agents:
        items:
          $ref: '#/definitions/authapi.AgentUser'
        type: array
    type: object
  authapi.AllowanceRequest:
    properties:
      allowance:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  authapi.AllowanceRequestsRes:
    properties:
      requests:
        items:
          $ref: '#/definitions/authapi.AllowanceRequest'
        type: array
    type: object
  authapi.AuthRes:
    properties:
      result:
        type: boolean
    type: object
  authapi.ConfirmAgentReq:
    properties:
      confirm:
        type: boolean
      username:
        type: string
    required:
    - confirm
    - username
    type: object
  authapi.ConfirmAllowanceReq:
    properties:
      confirm:
        type: boolean
      token:
        type: string
      username:
        type: string
    required:
    - confirm
    - token
    - username
    type: object
  authapi.RemoveUserReq:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  authapi.RequestAgentUserReq:
    properties:
      allowances:
        additionalProperties:
          type: string
        type: object
      password:
        type: string
      perms:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - allowances
    - password
    - perms
    - username
    type: object
  authapi.RequestAllowanceReq:
    properties:
      allowance:
        type: string
      token:
        type: string
      username:
        type: string
    required:
    - token
    - username
    type: object
  authapi.RevokeAllowanceReq:
    properties:
      token:
        type: string
      username:
        type: string
    required:
    - token
    - username
    type: object
  genericchatstorage.Chat:
    properties:
      chatId:
        type: string
      createdAt:
        type: integer
      isLocal:
        type: boolean
      modelId:
        type: string
      title:
        type: string
    type: object
  genericchatstorage.ChatCompletionMessage:
    properties:
      content:
        type: string
      name:
        description: |-
          This property isn't in the official documentation, but it's in
          the documentation for the official library for python:
          - https://github.com/openai/openai-python/blob/main/chatml.md
          - https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb
        type: string
      role:
        type: string
      tool_call_id:
        description: For Role=tool prompts this should be set to the ID given in the
          assistant's prior request to call a tool.
        type: string
    type: object
  genericchatstorage.ChatCompletionResponseFormat:
    properties:
      type:
        type: string
    type: object
  genericchatstorage.ChatHistory:
    properties:
      isLocal:
        type: boolean
      messages:
        items:
          $ref: '#/definitions/genericchatstorage.ChatMessage'
        type: array
      modelId:
        type: string
      title:
        type: string
    type: object
  genericchatstorage.ChatMessage:
    properties:
      isImageContent:
        type: boolean
      isVideoRawContent:
        type: boolean
      prompt:
        $ref: '#/definitions/genericchatstorage.OpenAiCompletionRequest'
      promptAt:
        type: integer
      response:
        type: string
      responseAt:
        type: integer
    type: object
  genericchatstorage.OpenAiCompletionRequest:
    properties:
      frequency_penalty:
        type: number
      function_call:
        description: 'Deprecated: use ToolChoice instead.'
      logit_bias:
        additionalProperties:
          type: integer
        description: |-
          LogitBias is must be a token id string (specified by their token ID in the tokenizer), not a word string.
          incorrect: `"logit_bias":{"You": 6}`, correct: `"logit_bias":{"1639": 6}`
          refs: https://platform.openai.com/docs/api-reference/chat/create#chat/create-logit_bias
        type: object
      logprobs:
        description: |-
          LogProbs indicates whether to return log probabilities of the output tokens or not.
          If true, returns the log probabilities of each output token returned in the content of message.
          This option is currently not available on the gpt-4-vision-preview model.
        type: boolean
      max_tokens:
        type: integer
      messages:
        items:
          $ref: '#/definitions/genericchatstorage.ChatCompletionMessage'
        type: array
      model:
        type: string
      "n":
        type: integer
      presence_penalty:
        type: number
      response_format:
        $ref: '#/definitions/genericchatstorage.ChatCompletionResponseFormat'
      seed:
        type: integer
      stop:
        items:
          type: string
        type: array
      stream:
        type: boolean
      temperature:
        type: number
      tool_choice:
        description: This can be either a string or an ToolChoice object.
      top_logprobs:
        description: |-
          TopLogProbs is an integer between 0 and 5 specifying the number of most likely tokens to return at each
          token position, each with an associated log probability.
          logprobs must be set to true if this parameter is used.
        type: integer
      top_p:
        type: number
      user:
        type: string
    type: object
  lib.BigInt:
    properties:
      big.Int:
        type: string
    type: object
  morrpcmesssage.SessionRes:
    properties:
      approval:
        type: string
      approvalSig:
        type: string
      message:
        type: string
      signature:
        type: string
      timestamp:
        type: integer
      user:
        type: string
    required:
    - approval
    - approvalSig
    - message
    - signature
    - timestamp
    - user
    type: object
  proxyapi.AddFileReq:
    properties:
      filePath:
        type: string
      id:
        type: string
      modelName:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - filePath
    type: object
  proxyapi.AddIpfsFileRes:
    properties:
      fileCID:
        type: string
      fileCIDHash:
        type: string
      metadataCID:
        type: string
      metadataCIDHash:
        type: string
    required:
    - fileCID
    - fileCIDHash
    - metadataCID
    - metadataCIDHash
    type: object
  proxyapi.CIDReq:
    properties:
      cidHash:
        type: string
    required:
    - cidHash
    type: object
  proxyapi.CallAgentToolReq:
    properties:
      input:
        additionalProperties: true
        type: object
      toolName:
        type: string
    required:
    - input
    - toolName
    type: object
  proxyapi.ChatCompletionRequestSwaggerExample:
    properties:
      messages:
        items:
          properties:
            content:
              example: tell me a joke
              type: string
            role:
              example: user
              type: string
          type: object
        type: array
      stream:
        type: boolean
    type: object
  proxyapi.ContainerInfo:
    properties:
      createdAt:
        type: string
      id:
        type: string
      image:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      networkMode:
        type: string
      ports:
        items:
          $ref: '#/definitions/proxyapi.PortMapping'
        type: array
      state:
        type: string
      status:
        type: string
    type: object
  proxyapi.DockerBuildReq:
    properties:
      buildArgs:
        additionalProperties:
          type: string
        type: object
      contextPath:
        type: string
      dockerfile:
        type: string
      imageName:
        type: string
      imageTag:
        type: string
    required:
    - contextPath
    - dockerfile
    - imageName
    type: object
  proxyapi.DockerBuildRes:
    properties:
      imageTag:
        type: string
    required:
    - imageTag
    type: object
  proxyapi.DockerContainerActionReq:
    properties:
      containerId:
        type: string
      force:
        type: boolean
      timeout:
        type: integer
    required:
    - containerId
    type: object
  proxyapi.DockerContainerInfoRes:
    properties:
      createdAt:
        type: string
      id:
        type: string
      image:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      networkMode:
        type: string
      ports:
        items:
          $ref: '#/definitions/proxyapi.PortMapping'
        type: array
      state:
        type: string
      status:
        type: string
    type: object
  proxyapi.DockerListContainersReq:
    properties:
      all:
        type: boolean
      filterLabels:
        additionalProperties:
          type: string
        type: object
    type: object
  proxyapi.DockerListContainersRes:
    properties:
      containers:
        items:
          $ref: '#/definitions/proxyapi.ContainerInfo'
        type: array
    type: object
  proxyapi.DockerPruneRes:
    properties:
      spaceReclaimed:
        type: integer
    type: object
  proxyapi.DockerStartContainerReq:
    properties:
      containerName:
        type: string
      env:
        items:
          type: string
        type: array
      imageName:
        type: string
      networkMode:
        type: string
      ports:
        additionalProperties:
          type: string
        type: object
      volumes:
        additionalProperties:
          type: string
        type: object
    required:
    - imageName
    type: object
  proxyapi.DockerStartContainerRes:
    properties:
      containerId:
        type: string
    required:
    - containerId
    type: object
  proxyapi.DockerStreamBuildEvent:
    properties:
      current:
        type: integer
      error:
        type: string
      errorDetails:
        type: string
      id:
        type: string
      percentage:
        type: number
      progress:
        type: string
      status:
        description: Status message
        type: string
      stream:
        type: string
      timeUpdated:
        type: integer
      total:
        type: integer
    type: object
  proxyapi.DockerVersionRes:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  proxyapi.DownloadProgressEvent:
    properties:
      downloaded:
        description: Bytes downloaded so far
        type: integer
      error:
        description: Error message, if status is "error"
        type: string
      percentage:
        description: Percentage complete (0-100)
        type: number
      status:
        description: '"downloading", "completed", "error"'
        type: string
      timeUpdated:
        description: Timestamp of the update
        type: integer
      total:
        description: Total bytes to download
        type: integer
    type: object
  proxyapi.InitiateSessionReq:
    properties:
      bidId:
        type: string
      provider:
        type: string
      providerUrl:
        type: string
      spend:
        type: string
      user:
        type: string
    required:
    - bidId
    - provider
    - providerUrl
    - spend
    - user
    type: object
  proxyapi.IpfsVersionRes:
    properties:
      version:
        type: string
    required:
    - version
    type: object
  proxyapi.PingReq:
    properties:
      providerAddr:
        type: string
      providerUrl:
        type: string
    required:
    - providerAddr
    - providerUrl
    type: object
  proxyapi.PingRes:
    properties:
      ping:
        type: integer
    type: object
  proxyapi.PinnedFileRes:
    properties:
      fileCID:
        type: string
      fileCIDHash:
        type: string
      fileName:
        type: string
      fileSize:
        type: integer
      id:
        type: string
      metadataCID:
        type: string
      metadataCIDHash:
        type: string
      modelName:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - fileCID
    - fileCIDHash
    - metadataCID
    - metadataCIDHash
    type: object
  proxyapi.PortMapping:
    properties:
      containerPort:
        type: string
      hostIp:
        type: string
      hostPort:
        type: string
      protocol:
        type: string
    type: object
  proxyapi.ResultResponse:
    properties:
      result:
        type: boolean
    type: object
  proxyapi.UpdateChatTitleReq:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  structs.AllowanceRes:
    properties:
      allowance:
        example: 100000000
        type: integer
    type: object
  structs.BalanceRes:
    properties:
      balance:
        type: string
    type: object
  structs.Bid:
    properties:
      createdAt:
        type: integer
      deletedAt:
        type: integer
      id:
        type: string
      modelAgentId:
        type: string
      nonce:
        type: integer
      pricePerSecond:
        type: integer
      provider:
        type: string
    type: object
  structs.BidRes:
    properties:
      bid:
        $ref: '#/definitions/structs.Bid'
    type: object
  structs.BidsRes:
    properties:
      bids:
        items:
          $ref: '#/definitions/structs.Bid'
        type: array
    type: object
  structs.BlockRes:
    properties:
      block:
        example: 1234
        type: integer
    type: object
  structs.BudgetRes:
    properties:
      budget:
        example: 100000000
        type: integer
    type: object
  structs.ContractInteraction:
    properties:
      contractAddress:
        type: string
      contractName:
        type: string
      decodedInput:
        items:
          $ref: '#/definitions/structs.InputEntry'
        type: array
      methodName:
        type: string
    type: object
  structs.CreateBidRequest:
    properties:
      modelID:
        type: string
      pricePerSecond:
        type: integer
    required:
    - modelID
    - pricePerSecond
    type: object
  structs.CreateModelRequest:
    properties:
      fee:
        example: 123000000000
        type: integer
      id:
        example: "0x1234"
        type: string
      ipfsID:
        example: "0x1234"
        type: string
      name:
        example: Llama 2.0
        maxLength: 64
        minLength: 1
        type: string
      stake:
        example: 123000000000
        type: integer
      tags:
        items:
          type: string
        maxItems: 64
        minItems: 1
        type: array
    required:
    - fee
    - ipfsID
    - name
    - stake
    - tags
    type: object
  structs.CreateProviderRequest:
    properties:
      endpoint:
        example: mycoolmornode.domain.com:3989
        type: string
      stake:
        example: 123000000000
        type: integer
    required:
    - endpoint
    - stake
    type: object
  structs.InputEntry:
    properties:
      key:
        type: string
      type:
        type: string
      value: {}
    type: object
  structs.MappedTransaction:
    properties:
      contract:
        $ref: '#/definitions/structs.ContractInteraction'
      from:
        type: string
      hash:
        type: string
      timestamp:
        type: string
      to:
        type: string
      transfers:
        items:
          $ref: '#/definitions/structs.TokenTransfer'
        type: array
    type: object
  structs.Model:
    properties:
      createdAt:
        type: integer
      fee:
        type: integer
      id:
        type: string
      ipfsCID:
        type: string
      isDeleted:
        type: boolean
      name:
        type: string
      owner:
        type: string
      stake:
        type: integer
      tags:
        items:
          type: string
        type: array
    type: object
  structs.ModelRes:
    properties:
      model:
        $ref: '#/definitions/structs.Model'
    type: object
  structs.ModelsRes:
    properties:
      models:
        items:
          $ref: '#/definitions/structs.Model'
        type: array
    type: object
  structs.OpenSessionRequest:
    properties:
      approval:
        example: "0x1234"
        format: hex
        type: string
      approvalSig:
        example: "0x1234"
        format: hex
        type: string
      directPayment:
        type: boolean
      stake:
        example: 123000000000
        type: integer
    required:
    - approval
    - approvalSig
    - stake
    type: object
  structs.OpenSessionRes:
    properties:
      sessionID:
        example: "0x1234"
        type: string
    type: object
  structs.OpenSessionWithDurationRequest:
    properties:
      sessionDuration:
        type: integer
    type: object
  structs.OpenSessionWithFailover:
    properties:
      directPayment:
        type: boolean
      failover:
        type: boolean
      sessionDuration:
        type: integer
    type: object
  structs.Provider:
    properties:
      address:
        type: string
      createdAt:
        type: integer
      endpoint:
        type: string
      isDeleted:
        type: boolean
      stake:
        type: integer
    type: object
  structs.ProviderRes:
    properties:
      provider:
        $ref: '#/definitions/structs.Provider'
    type: object
  structs.ProvidersRes:
    properties:
      providers:
        items:
          $ref: '#/definitions/structs.Provider'
        type: array
    type: object
  structs.ScoredBid:
    properties:
      bid:
        $ref: '#/definitions/structs.Bid'
      id:
        type: string
      score:
        type: number
    type: object
  structs.ScoredBidsRes:
    properties:
      bids:
        items:
          $ref: '#/definitions/structs.ScoredBid'
        type: array
    type: object
  structs.SendRequest:
    properties:
      amount:
        type: integer
      to:
        type: string
    required:
    - amount
    - to
    type: object
  structs.Session:
    properties:
      bidID:
        type: string
      closedAt:
        type: integer
      closeoutReceipt:
        type: string
      closeoutType:
        type: integer
      endsAt:
        type: integer
      id:
        type: string
      modelAgentId:
        type: string
      openedAt:
        type: integer
      pricePerSecond:
        type: integer
      provider:
        type: string
      providerWithdrawnAmount:
        type: integer
      stake:
        type: integer
      user:
        type: string
    type: object
  structs.SessionRes:
    properties:
      session:
        $ref: '#/definitions/structs.Session'
    type: object
  structs.SessionsRes:
    properties:
      sessions:
        items:
          $ref: '#/definitions/structs.Session'
        type: array
    type: object
  structs.SupplyRes:
    properties:
      supply:
        example: 100000000
        type: integer
    type: object
  structs.TokenBalanceRes:
    properties:
      eth:
        example: 100000000
        type: integer
      mor:
        example: 100000000
        type: integer
    type: object
  structs.TokenTransfer:
    properties:
      from:
        type: string
      to:
        type: string
      tokenAddress:
        description: nil for eth transfers
        type: string
      tokenDecimals:
        type: integer
      tokenIcon:
        type: string
      tokenName:
        type: string
      tokenSymbol:
        type: string
      value:
        type: string
    type: object
  structs.TransactionsRes:
    properties:
      transactions:
        items:
          $ref: '#/definitions/structs.MappedTransaction'
        type: array
    type: object
  structs.TxRes:
    properties:
      tx:
        example: "0x1234"
        type: string
    type: object
  system.ConfigResponse:
    properties:
      commit:
        type: string
      config: {}
      derivedConfig: {}
      version:
        type: string
    type: object
  system.FD:
    properties:
      id:
        type: string
      path:
        type: string
    type: object
  system.HealthCheckResponse:
    properties:
      status:
        type: string
      uptime:
        type: string
      version:
        type: string
    type: object
  system.SetEthNodeURLReq:
    properties:
      urls:
        items:
          type: string
        type: array
    required:
    - urls
    type: object
  system.StatusRes:
    properties:
      status:
        type: string
    type: object
  walletapi.SetupWalletMnemonicReqBody:
    properties:
      derivationPath:
        type: string
      mnemonic:
        type: string
    required:
    - derivationPath
    - mnemonic
    type: object
  walletapi.SetupWalletPrKeyReqBody:
    properties:
      privateKey:
        type: string
    required:
    - privateKey
    type: object
  walletapi.StatusRes:
    properties:
      status:
        example: ok
        type: string
    type: object
  walletapi.WalletRes:
    properties:
      address:
        example: "0x1234"
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  description: API for Morpheus Lumerin Node
  termsOfService: http://swagger.io/terms/
  title: Morpheus Lumerin Node API
paths:
  /auth/allowance/confirm:
    post:
      description: 'Permission: agent_requests'
      parameters:
      - description: Confirm Token Allowance Request
        in: body
        name: confirmAllowanceReq
        required: true
        schema:
          $ref: '#/definitions/authapi.ConfirmAllowanceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      security:
      - BasicAuth: []
      summary: Confirm or Decline Token Allowance Request
      tags:
      - auth
  /auth/allowance/requests:
    get:
      description: 'Permission: agent_requests'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AllowanceRequestsRes'
      security:
      - BasicAuth: []
      summary: Get All Token Allowance Requests
      tags:
      - auth
    post:
      description: 'Permission: request_allowance'
      parameters:
      - description: Request Allowance Request with token and amount
        in: body
        name: requestAllowanceReq
        required: true
        schema:
          $ref: '#/definitions/authapi.RequestAllowanceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      security:
      - BasicAuth: []
      summary: Request Allowance for Agent
      tags:
      - auth
  /auth/allowance/revoke:
    post:
      description: 'Permission: agent_requests'
      parameters:
      - description: Revoke Token Allowance Request
        in: body
        name: revokeAllowanceReq
        required: true
        schema:
          $ref: '#/definitions/authapi.RevokeAllowanceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      security:
      - BasicAuth: []
      summary: Revoke Token Allowance for Agent
      tags:
      - auth
  /auth/cookie/path:
    get:
      description: Get the path to the cookie file
      produces:
      - application/json
      responses: {}
      summary: Get Path to Cookie File
      tags:
      - auth
  /auth/users:
    delete:
      description: 'Permission: remove_user'
      parameters:
      - description: Remove User Request
        in: body
        name: removeUserReq
        required: true
        schema:
          $ref: '#/definitions/authapi.RemoveUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      security:
      - BasicAuth: []
      summary: Remove User from Proxy API
      tags:
      - auth
    get:
      description: 'Permission: agent_requests'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AgentUsersRes'
      security:
      - BasicAuth: []
      summary: Get Agent Users
      tags:
      - auth
    post:
      description: 'Permission: add_user'
      parameters:
      - description: Add User Request
        in: body
        name: addUserReq
        required: true
        schema:
          $ref: '#/definitions/authapi.AddUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      security:
      - BasicAuth: []
      summary: Add/Update User in Proxy Conf
      tags:
      - auth
  /auth/users/{username}/txs:
    get:
      description: 'Permission: agent_requests'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AgentTxsRes'
      security:
      - BasicAuth: []
      summary: Get Agent Transactions
      tags:
      - auth
  /auth/users/confirm:
    post:
      description: 'Permission: agent_requests'
      parameters:
      - description: Confirm Agent User Request
        in: body
        name: confirmAgentUserReq
        required: true
        schema:
          $ref: '#/definitions/authapi.ConfirmAgentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      security:
      - BasicAuth: []
      summary: Confirm or Decline Agent User
      tags:
      - auth
  /auth/users/request:
    post:
      parameters:
      - description: Request Agent User Request
        in: body
        name: requestAgentUserReq
        required: true
        schema:
          $ref: '#/definitions/authapi.RequestAgentUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authapi.AuthRes'
      summary: Request New User for Agent
      tags:
      - auth
  /blockchain/allowance:
    get:
      description: Get MOR allowance for spender
      parameters:
      - description: Spender address
        in: query
        name: spender
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.AllowanceRes'
      security:
      - BasicAuth: []
      summary: Get Allowance for MOR
      tags:
      - transactions
  /blockchain/approve:
    post:
      description: Approve MOR allowance for spender
      parameters:
      - description: Spender address
        in: query
        name: spender
        required: true
        type: string
      - description: Amount
        in: query
        name: amount
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Approve MOR allowance
      tags:
      - transactions
  /blockchain/balance:
    get:
      description: Get ETH and MOR balance of the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TokenBalanceRes'
      security:
      - BasicAuth: []
      summary: Get ETH and MOR balance
      tags:
      - transactions
  /blockchain/bids:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bid
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/structs.CreateBidRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BidRes'
      security:
      - BasicAuth: []
      summary: Creates bid in blockchain
      tags:
      - bids
  /blockchain/bids/{id}:
    delete:
      parameters:
      - description: Bid ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Delete Bid
      tags:
      - bids
    get:
      description: Get bid from blockchain by ID
      parameters:
      - description: Bid ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BidRes'
      security:
      - BasicAuth: []
      summary: Get Bid by ID
      tags:
      - bids
  /blockchain/bids/{id}/session:
    post:
      consumes:
      - application/json
      description: Full flow to open a session by bidId
      parameters:
      - description: Open session
        in: body
        name: opensession
        required: true
        schema:
          $ref: '#/definitions/structs.OpenSessionWithDurationRequest'
      - description: Bid ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.OpenSessionRes'
      security:
      - BasicAuth: []
      summary: Open Session by bidId in blockchain
      tags:
      - sessions
  /blockchain/latestBlock:
    get:
      description: Get latest block number from blockchain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BlockRes'
      security:
      - BasicAuth: []
      summary: Get Latest Block
      tags:
      - transactions
  /blockchain/models:
    get:
      description: Get models list from blokchain
      parameters:
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.ModelsRes'
      security:
      - BasicAuth: []
      summary: Get models list
      tags:
      - models
    post:
      consumes:
      - application/json
      description: If you provide ID in request it will be used as "Base Id" for generation
        of new model ID. So actual ID will be generated from it, and you will get
        it in response.
      parameters:
      - description: Model
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/structs.CreateModelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.ModelRes'
      security:
      - BasicAuth: []
      summary: Creates model in blockchain
      tags:
      - models
  /blockchain/models/{id}:
    delete:
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Deregister Model
      tags:
      - models
  /blockchain/models/{id}/bids:
    get:
      description: Get bids from blockchain by model agent
      parameters:
      - description: ModelAgent ID
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BidsRes'
      security:
      - BasicAuth: []
      summary: Get Active Bids by Model
      tags:
      - bids
  /blockchain/models/{id}/bids/rated:
    get:
      description: Get rated bids from blockchain by model
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.ScoredBidsRes'
      security:
      - BasicAuth: []
      summary: Get Rated Bids
      tags:
      - bids
  /blockchain/models/{id}/session:
    post:
      consumes:
      - application/json
      description: Full flow to open a session by modelId
      parameters:
      - description: Open session
        in: body
        name: opensession
        required: true
        schema:
          $ref: '#/definitions/structs.OpenSessionWithFailover'
      - description: Model ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.OpenSessionRes'
      security:
      - BasicAuth: []
      summary: Open Session by ModelID in blockchain
      tags:
      - sessions
  /blockchain/providers:
    get:
      description: Get providers list from blokchain
      parameters:
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.ProvidersRes'
      security:
      - BasicAuth: []
      summary: Get providers list
      tags:
      - providers
    post:
      consumes:
      - application/json
      parameters:
      - description: Provider
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/structs.CreateProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.ProviderRes'
      security:
      - BasicAuth: []
      summary: Creates or updates provider in blockchain
      tags:
      - providers
  /blockchain/providers/{id}:
    delete:
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Deregister Provider
      tags:
      - providers
  /blockchain/providers/{id}/bids:
    get:
      description: Get bids from blockchain by provider
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BidsRes'
      security:
      - BasicAuth: []
      summary: Get Bids by Provider
      tags:
      - bids
  /blockchain/providers/{id}/bids/active:
    get:
      description: Get bids from blockchain by provider
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BidsRes'
      security:
      - BasicAuth: []
      summary: Get Bids by Provider
      tags:
      - bids
  /blockchain/send/eth:
    post:
      description: Send Eth to address
      parameters:
      - description: Send Eth
        in: body
        name: sendeth
        required: true
        schema:
          $ref: '#/definitions/structs.SendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Send Eth
      tags:
      - transactions
  /blockchain/send/mor:
    post:
      description: Send Mor to address
      parameters:
      - description: Send Mor
        in: body
        name: sendmor
        required: true
        schema:
          $ref: '#/definitions/structs.SendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Send Mor
      tags:
      - transactions
  /blockchain/sessions:
    post:
      consumes:
      - application/json
      description: Sends transaction in blockchain to open a session
      parameters:
      - description: Open session
        in: body
        name: opensession
        required: true
        schema:
          $ref: '#/definitions/structs.OpenSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.OpenSessionRes'
      security:
      - BasicAuth: []
      summary: Open Session with Provider in blockchain
      tags:
      - sessions
  /blockchain/sessions/{id}:
    get:
      description: Returns session by ID
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SessionRes'
      security:
      - BasicAuth: []
      summary: Get session
      tags:
      - sessions
  /blockchain/sessions/{id}/close:
    post:
      description: Sends transaction in blockchain to close a session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Close Session with Provider
      tags:
      - sessions
  /blockchain/sessions/budget:
    get:
      description: Get todays budget from blockchain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BudgetRes'
      security:
      - BasicAuth: []
      summary: Get Todays Budget
      tags:
      - sessions
  /blockchain/sessions/provider:
    get:
      description: Get sessions from blockchain by provider
      parameters:
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      - description: Provider address
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SessionsRes'
      security:
      - BasicAuth: []
      summary: Get Sessions for Provider
      tags:
      - sessions
  /blockchain/sessions/user:
    get:
      description: Get sessions from blockchain by user
      parameters:
      - description: User address
        in: query
        name: user
        required: true
        type: string
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SessionsRes'
      security:
      - BasicAuth: []
      summary: Get Sessions for User
      tags:
      - sessions
  /blockchain/sessions/user/ids:
    get:
      description: Get sessions from blockchain by user
      parameters:
      - description: User address
        in: query
        name: user
        required: true
        type: string
      - example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - enum:
        - asc
        - desc
        example: asc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SessionsRes'
      security:
      - BasicAuth: []
      summary: Get Sessions for User
      tags:
      - sessions
  /blockchain/token/supply:
    get:
      description: Get MOR token supply from blockchain
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SupplyRes'
      security:
      - BasicAuth: []
      summary: Get Token Supply
      tags:
      - sessions
  /blockchain/transactions:
    get:
      description: Get MOR and ETH transactions
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TransactionsRes'
      security:
      - BasicAuth: []
      - BasicAuth: []
      summary: Get Transactions
      tags:
      - transactions
  /config:
    get:
      description: Return the current config of proxy router
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.ConfigResponse'
      security:
      - BasicAuth: []
      summary: Get Config
      tags:
      - system
  /config/ethNode:
    delete:
      description: Delete the Eth Node URLs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.StatusRes'
      security:
      - BasicAuth: []
      summary: Delete Eth Node URLs
      tags:
      - system
    post:
      consumes:
      - application/json
      description: Set the Eth Node URLs
      parameters:
      - description: URLs
        in: body
        name: urls
        required: true
        schema:
          $ref: '#/definitions/system.SetEthNodeURLReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.StatusRes'
      security:
      - BasicAuth: []
      summary: Set Eth Node URLs
      tags:
      - system
  /docker/build:
    post:
      parameters:
      - description: Docker build request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.DockerBuildReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerBuildRes'
      security:
      - BasicAuth: []
      summary: Build a Docker image
      tags:
      - docker
  /docker/build/stream:
    post:
      parameters:
      - description: Docker build request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.DockerBuildReq'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerStreamBuildEvent'
      security:
      - BasicAuth: []
      summary: Build a Docker image with progress updates as SSE stream
      tags:
      - docker
  /docker/container/{id}:
    get:
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerContainerInfoRes'
      security:
      - BasicAuth: []
      summary: Get Docker container info
      tags:
      - docker
  /docker/container/{id}/logs:
    get:
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      - description: Number of lines to show from the end
        in: query
        name: tail
        type: integer
      - description: Follow log output
        in: query
        name: follow
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: Log output
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Get Docker container logs
      tags:
      - docker
  /docker/container/{id}/logs/stream:
    get:
      parameters:
      - description: Container ID
        in: path
        name: id
        required: true
        type: string
      - description: Number of lines to show from the end
        in: query
        name: tail
        type: integer
      produces:
      - text/event-stream
      responses:
        "200":
          description: Log output events
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Stream Docker container logs as SSE
      tags:
      - docker
  /docker/container/remove:
    post:
      parameters:
      - description: Docker container remove request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.DockerContainerActionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Remove a Docker container
      tags:
      - docker
  /docker/container/start:
    post:
      parameters:
      - description: Docker start container request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.DockerStartContainerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerStartContainerRes'
      security:
      - BasicAuth: []
      summary: Start a Docker container
      tags:
      - docker
  /docker/container/stop:
    post:
      parameters:
      - description: Docker container stop request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.DockerContainerActionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Stop a Docker container
      tags:
      - docker
  /docker/containers:
    post:
      parameters:
      - description: Docker list containers request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.DockerListContainersReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerListContainersRes'
      security:
      - BasicAuth: []
      summary: List Docker containers
      tags:
      - docker
  /docker/prune/containers:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerPruneRes'
      security:
      - BasicAuth: []
      summary: Prune stopped Docker containers
      tags:
      - docker
  /docker/prune/images:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerPruneRes'
      security:
      - BasicAuth: []
      summary: Prune unused Docker images
      tags:
      - docker
  /docker/version:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DockerVersionRes'
      security:
      - BasicAuth: []
      summary: Get Docker version
      tags:
      - docker
  /files:
    get:
      description: Returns opened files
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/system.FD'
            type: array
      security:
      - BasicAuth: []
      summary: Get files
      tags:
      - system
  /healthcheck:
    get:
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.HealthCheckResponse'
      summary: Healthcheck example
      tags:
      - system
  /ipfs/add:
    post:
      parameters:
      - description: File Path and Metadata
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/proxyapi.AddFileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.AddIpfsFileRes'
      security:
      - BasicAuth: []
      summary: Add a file to IPFS with metadata
      tags:
      - ipfs
  /ipfs/download/{cidHash}:
    get:
      parameters:
      - description: cidHash
        in: path
        name: cidHash
        required: true
        type: string
      - description: Destination Path
        in: query
        name: dest
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Download a file from IPFS
      tags:
      - ipfs
  /ipfs/download/stream/{cidHash}:
    get:
      parameters:
      - description: cidHash
        in: path
        name: cidHash
        required: true
        type: string
      - description: Destination Path
        in: query
        name: dest
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.DownloadProgressEvent'
      security:
      - BasicAuth: []
      summary: Download a file from IPFS with progress updates as SSE stream
      tags:
      - ipfs
  /ipfs/pin:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/proxyapi.PinnedFileRes'
            type: array
      security:
      - BasicAuth: []
      summary: Get all pinned files metadata
      tags:
      - ipfs
    post:
      parameters:
      - description: cidHash
        in: body
        name: cidHash
        required: true
        schema:
          $ref: '#/definitions/proxyapi.CIDReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Pin a file to IPFS
      tags:
      - ipfs
  /ipfs/unpin:
    post:
      parameters:
      - description: cidHash
        in: body
        name: cidHash
        required: true
        schema:
          $ref: '#/definitions/proxyapi.CIDReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Unpin a file from IPFS
      tags:
      - ipfs
  /ipfs/version:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.IpfsVersionRes'
      security:
      - BasicAuth: []
      summary: Get IPFS Version
      tags:
      - ipfs
  /proxy/provider/ping:
    post:
      description: sends a ping to the provider on the RPC level
      parameters:
      - description: Ping Request
        in: body
        name: pingReq
        required: true
        schema:
          $ref: '#/definitions/proxyapi.PingReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.PingRes'
      summary: Ping Provider
      tags:
      - chat
  /proxy/sessions/{id}/providerClaim:
    post:
      description: Claim provider balance from session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.TxRes'
      security:
      - BasicAuth: []
      summary: Claim Provider Balance
      tags:
      - sessions
  /proxy/sessions/{id}/providerClaimableBalance:
    get:
      description: Get provider claimable balance from session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BalanceRes'
      security:
      - BasicAuth: []
      summary: Get Provider Claimable Balance
      tags:
      - sessions
  /proxy/sessions/initiate:
    post:
      description: sends a handshake to the provider
      parameters:
      - description: Initiate Session
        in: body
        name: initiateSession
        required: true
        schema:
          $ref: '#/definitions/proxyapi.InitiateSessionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/morrpcmesssage.SessionRes'
      security:
      - BasicAuth: []
      summary: Initiate Session with Provider
      tags:
      - chat
  /v1/agents:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aiengine.LocalAgent'
            type: array
      security:
      - BasicAuth: []
      summary: Get local agents
      tags:
      - agents
  /v1/agents/tools:
    get:
      parameters:
      - description: Session ID
        format: hex32
        in: header
        name: session_id
        type: string
      - description: Agent ID
        format: hex32
        in: header
        name: agent_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aiengine.AgentTool'
            type: array
      security:
      - BasicAuth: []
      summary: Get agent tools
      tags:
      - agents
    post:
      parameters:
      - description: Session ID
        format: hex32
        in: header
        name: session_id
        type: string
      - description: Agent ID
        format: hex32
        in: header
        name: agent_id
        type: string
      - description: Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/proxyapi.CallAgentToolReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - BasicAuth: []
      summary: Call agent tool
      tags:
      - agents
  /v1/chat/completions:
    post:
      description: Send prompt to a local or remote model based on session id in header
      parameters:
      - description: Session ID
        format: hex32
        in: header
        name: session_id
        type: string
      - description: Model ID
        format: hex32
        in: header
        name: model_id
        type: string
      - description: Chat ID
        format: hex32
        in: header
        name: chat_id
        type: string
      - description: Prompt
        in: body
        name: prompt
        required: true
        schema:
          $ref: '#/definitions/proxyapi.ChatCompletionRequestSwaggerExample'
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BasicAuth: []
      summary: Send Local Or Remote Prompt
      tags:
      - chat
  /v1/chats:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/genericchatstorage.Chat'
            type: array
      security:
      - BasicAuth: []
      summary: Get all chats stored in the system
      tags:
      - chat
  /v1/chats/{id}:
    delete:
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Delete chat by id from storage
      tags:
      - chat
    get:
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/genericchatstorage.ChatHistory'
      security:
      - BasicAuth: []
      summary: Get chat by id
      tags:
      - chat
    post:
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: string
      - description: Chat Title
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/proxyapi.UpdateChatTitleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxyapi.ResultResponse'
      security:
      - BasicAuth: []
      summary: Update chat title by id
      tags:
      - chat
  /v1/models:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aiengine.LocalModel'
            type: array
      security:
      - BasicAuth: []
      summary: Get local models
      tags:
      - system
  /wallet:
    delete:
      description: Remove wallet from proxy storage
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/walletapi.StatusRes'
      security:
      - BasicAuth: []
      summary: Remove wallet from proxy
      tags:
      - wallet
    get:
      description: Get wallet address
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/walletapi.WalletRes'
      security:
      - BasicAuth: []
      summary: Get Wallet
      tags:
      - wallet
  /wallet/mnemonic:
    post:
      description: Setup wallet using mnemonic
      parameters:
      - description: Mnemonic
        in: body
        name: mnemonic
        required: true
        schema:
          $ref: '#/definitions/walletapi.SetupWalletMnemonicReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/walletapi.WalletRes'
      security:
      - BasicAuth: []
      summary: Setup wallet using mnemonic
      tags:
      - wallet
  /wallet/privateKey:
    post:
      description: Setup wallet with private key
      parameters:
      - description: Private key
        in: body
        name: privatekey
        required: true
        schema:
          $ref: '#/definitions/walletapi.SetupWalletPrKeyReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/walletapi.WalletRes'
      security:
      - BasicAuth: []
      summary: Setup wallet with private key
      tags:
      - wallet
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
